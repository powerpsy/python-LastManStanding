#!/usr/bin/env python3
"""
Last Man Standing - Jeu d'Action 2D
===================================

"""

import pygame
import sys
from game import Game
from config import Config

def main():
    """Fonction principale du jeu"""
    # === CONFIGURATION DE TEST ===
    # Choisir la taille d'√©cran pour les tests :
    # 1 = 1280x720 (720p)
    # 2 = 1920x1080 (1080p) 
    # 3 = 2560x1440 (1440p)
    # None = D√©tection automatique selon l'√©cran
    screen_size = 3  # Test en 1440p pour ajustements
    
    # Mode test "Always Skip" - pour tester rapidement le syst√®me
    test_always_skip = False  # Mettre True pour tester
    test_survival_timer = False  # Mettre True pour tester le timer de survie
    test_lightning_effects = False  # Mettre True pour tester les effets de lightning
    test_beam_effects = False  # Mettre True pour tester les effets de beam
    
    try:
        # Initialise Pygame
        pygame.init()
        
        # Cr√©e et lance une nouvelle partie
        config = Config(forced_screen_size=screen_size)
        game = Game(config)
        
        # Si mode test activ√©, simuler une situation o√π toutes les upgrades sont au max
        if test_always_skip:
            print("üß™ MODE TEST ALWAYS SKIP ACTIV√â")
            # Simuler qu'on a atteint tous les niveaux max (simplifi√©)
            game.level = 50  # Niveau √©lev√©
            # Cette ligne sera d√©comment√©e pour le test r√©el
            # game.upgrade_options = []  # Pas d'options disponibles
        
        # Si mode test timer activ√©, r√©duire la sant√© pour tester le game over
        if test_survival_timer:
            print("üß™ MODE TEST SURVIVAL TIMER ACTIV√â")
            game.player.health = 20  # Sant√© tr√®s faible pour test rapide
        
        # Si mode test lightning activ√©, d√©bloquer automatiquement le Lightning
        if test_lightning_effects:
            print("üß™ MODE TEST LIGHTNING EFFECTS ACTIV√â")
            from weapons import LightningWeapon
            game.weapon_manager.add_weapon(LightningWeapon)
            print("Lightning d√©bloqu√© pour tester les effets de particules !")
        
        # Si mode test beam activ√©, d√©bloquer automatiquement le Beam
        if test_beam_effects:
            print("üß™ MODE TEST BEAM EFFECTS ACTIV√â")
            from weapons import BeamWeapon
            game.weapon_manager.add_weapon(BeamWeapon)
            print("Beam d√©bloqu√© pour tester les d√©g√¢ts !")
        
        game.run()
        
    except KeyboardInterrupt:
        print("\nJeu interrompu par l'utilisateur.")
        
    except Exception as e:
        print(f"Une erreur s'est produite: {e}")
        
    finally:
        pygame.quit()
        sys.exit()

if __name__ == "__main__":
    main()
